<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project default="obfuscate" name="Create Runnable Jar for Project WebFetcherCompany">
	<!--this file was created by Eclipse Runnable JAR Export Wizard-->
	<!--ANT 1.7 is required                                        -->
	<target name="clean">
		<delete>
			<fileset dir="./install/webfresh">
			    <include name="webfresh.jar"/>
				<include name="webfresh-obfuscate.jar"/>
			</fileset>
		</delete>

	</target>
	<target name="create_run_jar" depends="clean">
		<jar destfile="F:/Eclipse-WS/git/tools/WebFetcherCompany/install/webfresh/webfresh.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="jlx.tools.research.Main" />
				<attribute name="Class-Path" value="." />
			</manifest>
			<fileset dir="F:/Eclipse-WS/git/tools/WebFetcherCompany/bin" />
			<zipfileset excludes="META-INF/**" src="../libs/commons/commons-codec-1.4.jar" />
			<zipfileset excludes="META-INF/**" src="../libs/commons/commons-httpclient-3.1.jar" />
			<zipfileset excludes="META-INF/**" src="../libs/commons/commons-lang-2.6.jar" />
			<zipfileset excludes="META-INF/**" src="../libs/commons/commons-logging-1.1.1.jar" />
			<fileset dir="F:/Eclipse-WS/git/tools/WebFetcherCommon/bin" />
			<fileset dir="F:/Eclipse-WS/git/tools/CommonUtils/bin" />
			<zipfileset excludes="META-INF/**" src="../libs/hotkey/jintellitype-1.3.1.jar" />
			<zipfileset excludes="META-INF/**" src="../libs/html/jsoup-1.6.3.jar" />
		</jar>
	</target>
	<target name="obfuscate" depends="create_run_jar">
		<taskdef classpath="../libs/proguard/proguard.jar" resource="proguard/ant/task.properties"/>
		<proguard>

			<!-- Specify the input jars, output jars, and library jars. -->

	    -injars  ./install/webfresh/webfresh.jar
	    -outjars install/webfresh/webfresh-obfuscate.jar

	    -libraryjars ${java.home}/lib/rt.jar;${java.home}/lib/jce.jar;${java.home}/lib/jsse.jar;../libs/servlet/servlet-api-2.5.jar;../libs/other/avalon-framework-4.1.3.jar;../libs/other/apache-log4j-extras-1.1.jar;../libs/other/logkit-1.0.1.jar
	    <!-- -libraryjars junit.jar    -->
			<!-- -libraryjars servlet.jar  -->
			<!-- -libraryjars jai_core.jar -->
			<!-- ...                       -->

			<!-- Save the obfuscation mapping to a file, and preserve line numbers. -->

	    -printmapping out.map
	    -renamesourcefileattribute SourceFile
	    -keepattributes SourceFile,LineNumberTable

	    <!-- Preserve all annotations. -->

	    -keepattributes *Annotation*

	    <!-- Preserve all public applications. -->

	    -keepclasseswithmembers public class * {
	        public static void main(java.lang.String[]);
	    }

	    <!-- Preserve all native method names and the names of their classes. -->

	    -keepclasseswithmembernames class * {
	        native &lt;methods&gt;;
	    }

	    <!-- Preserve the methods that are required in all enumeration classes. -->

	    -keepclassmembers class * extends java.lang.Enum {
	        public static **[] values();
	        public static ** valueOf(java.lang.String);
	    }

	    <!-- Explicitly preserve all serialization members. The Serializable
	         interface is only a marker interface, so it wouldn't save them.
	         You can comment this out if your library doesn't use serialization.
	         If your code contains serializable classes that have to be backward
	         compatible, please refer to the manual. -->

	    -keepclassmembers class * implements java.io.Serializable {
	        static final long serialVersionUID;
	        static final java.io.ObjectStreamField[] serialPersistentFields;
	        private void writeObject(java.io.ObjectOutputStream);
	        private void readObject(java.io.ObjectInputStream);
	        java.lang.Object writeReplace();
	        java.lang.Object readResolve();
	    }

	    <!-- Your application may contain more items that need to be preserved;
	         typically classes that are dynamically created using Class.forName -->

		</proguard>
	</target>

</project>
