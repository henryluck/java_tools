package jlx.db.proxy;

import java.io.InputStream;
import java.io.Reader;
import java.math.BigDecimal;
import java.net.URL;
import java.sql.Array;
import java.sql.Blob;
import java.sql.Clob;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ParameterMetaData;
import java.sql.PreparedStatement;
import java.sql.Ref;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.SQLWarning;
import java.sql.Time;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;

public class PreparedStatementProxy implements PreparedStatement {

	private PreparedStatement statement = null;
	private String sql = null;
	private List parameters = new ArrayList();

	public PreparedStatementProxy(PreparedStatement statement, String sql) {
		this.statement = statement;
		this.sql = sql;
	}

	public void addBatch(String sql) throws SQLException {
		long start = System.currentTimeMillis();
		statement.addBatch(sql);
		long end = System.currentTimeMillis();
		debug("addBatch: cost=" + (end - start) + "ms;sql=" + sql);
	}

	public void cancel() throws SQLException {
		statement.cancel();

	}

	public void clearBatch() throws SQLException {
		// TODO Auto-generated method stub
		statement.clearBatch();
	}

	public void clearWarnings() throws SQLException {
		// TODO Auto-generated method stub
		statement.clearWarnings();
	}

	public void close() throws SQLException {
		// TODO Auto-generated method stub
		statement.close();
	}

	public boolean execute(String sql) throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		boolean result = statement.execute(sql);
		long end = System.currentTimeMillis();
		debug("execute(sql): cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public boolean execute(String sql, int autoGeneratedKeys)
			throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		boolean result = statement.execute(sql, autoGeneratedKeys);
		long end = System.currentTimeMillis();
		debug("execute(sql,autoGK): cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public boolean execute(String sql, int[] columnIndexes) throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		boolean result = statement.execute(sql, columnIndexes);
		long end = System.currentTimeMillis();
		debug("execute(sql,[]columnI): cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public boolean execute(String sql, String[] columnNames)
			throws SQLException {
		long start = System.currentTimeMillis();
		boolean result = statement.execute(sql, columnNames);
		long end = System.currentTimeMillis();
		debug("execute(sql,[]columnN): cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public int[] executeBatch() throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		int[] result = statement.executeBatch();
		long end = System.currentTimeMillis();
		debug("executeBatch: cost=" + (end - start) + "ms");
		return result;
	}

	public ResultSet executeQuery(String sql) throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		ResultSet result = statement.executeQuery(sql);
		long end = System.currentTimeMillis();
		debug("executeQuery: cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public int executeUpdate(String sql) throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		int result = statement.executeUpdate(sql);
		long end = System.currentTimeMillis();
		debug("executeUpdate: cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public int executeUpdate(String sql, int autoGeneratedKeys)
			throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		int result = statement.executeUpdate(sql, autoGeneratedKeys);
		long end = System.currentTimeMillis();
		debug("executeUpdate(sql,autoGK): cost=" + (end - start) + "ms;sql="
				+ sql);
		debugParameter();
		return result;
	}

	public int executeUpdate(String sql, int[] columnIndexes)
			throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		int result = statement.executeUpdate(sql, columnIndexes);
		long end = System.currentTimeMillis();
		debug("executeUpdate(sql,[]columnI): cost=" + (end - start) + "ms;sql="
				+ sql);
		debugParameter();
		return result;
	}

	public int executeUpdate(String sql, String[] columnNames)
			throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		int result = statement.executeUpdate(sql, columnNames);
		long end = System.currentTimeMillis();
		debug("executeUpdate(sql,[]columnN): cost=" + (end - start) + "ms;sql="
				+ sql);
		debugParameter();
		return result;
	}

	public Connection getConnection() throws SQLException {
		// TODO Auto-generated method stub
		return new ConnetionProxy(statement.getConnection());
	}

	public int getFetchDirection() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getFetchDirection();
	}

	public int getFetchSize() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getFetchSize();
	}

	public ResultSet getGeneratedKeys() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getGeneratedKeys();
	}

	public int getMaxFieldSize() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getMaxFieldSize();
	}

	public int getMaxRows() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getMaxRows();
	}

	public boolean getMoreResults() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getMoreResults();
	}

	public boolean getMoreResults(int current) throws SQLException {
		// TODO Auto-generated method stub
		return statement.getMoreResults(current);
	}

	public int getQueryTimeout() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getQueryTimeout();
	}

	public ResultSet getResultSet() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getResultSet();
	}

	public int getResultSetConcurrency() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getResultSetConcurrency();
	}

	public int getResultSetHoldability() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getResultSetHoldability();
	}

	public int getResultSetType() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getResultSetType();
	}

	public int getUpdateCount() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getUpdateCount();
	}

	public SQLWarning getWarnings() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getWarnings();
	}

	public void setCursorName(String name) throws SQLException {
		// TODO Auto-generated method stub
		statement.setCursorName(name);
	}

	public void setEscapeProcessing(boolean enable) throws SQLException {
		// TODO Auto-generated method stub
		statement.setEscapeProcessing(enable);
	}

	public void setFetchDirection(int direction) throws SQLException {
		// TODO Auto-generated method stub
		statement.setFetchDirection(direction);
	}

	public void setFetchSize(int rows) throws SQLException {
		// TODO Auto-generated method stub
		statement.setFetchSize(rows);
	}

	public void setMaxFieldSize(int max) throws SQLException {
		// TODO Auto-generated method stub
		statement.setMaxFieldSize(max);
	}

	public void setMaxRows(int max) throws SQLException {
		// TODO Auto-generated method stub
		statement.setMaxRows(max);
	}

	public void setQueryTimeout(int seconds) throws SQLException {
		// TODO Auto-generated method stub
		statement.setQueryTimeout(seconds);
	}

	public void addBatch() throws SQLException {
		long start = System.currentTimeMillis();
		statement.addBatch();
		long end = System.currentTimeMillis();
		debug("addBatch: cost=" + (end - start) + "ms");

	}

	public void clearParameters() throws SQLException {
		// TODO Auto-generated method stub
		statement.clearParameters();
	}

	public boolean execute() throws SQLException {
		// TODO Auto-generated method stub
		long start = System.currentTimeMillis();
		boolean result = statement.execute();
		long end = System.currentTimeMillis();
		debug("execute(): cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public ResultSet executeQuery() throws SQLException {
		long start = System.currentTimeMillis();
		ResultSet result = statement.executeQuery();
		long end = System.currentTimeMillis();
		debug("executeQuery(): cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public int executeUpdate() throws SQLException {
		long start = System.currentTimeMillis();
		int result = statement.executeUpdate();
		long end = System.currentTimeMillis();
		debug("executeUpdate(): cost=" + (end - start) + "ms;sql=" + sql);
		debugParameter();
		return result;
	}

	public ResultSetMetaData getMetaData() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getMetaData();
	}

	public ParameterMetaData getParameterMetaData() throws SQLException {
		// TODO Auto-generated method stub
		return statement.getParameterMetaData();
	}

	public void setArray(int i, Array x) throws SQLException {
		// TODO Auto-generated method stub
		statement.setArray(i, x);
		parameters.add(x);
	}

	public void setAsciiStream(int parameterIndex, InputStream x, int length)
			throws SQLException {
		// TODO Auto-generated method stub
		statement.setAsciiStream(parameterIndex, x, length);
	}

	public void setBigDecimal(int parameterIndex, BigDecimal x)
			throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setBigDecimal(parameterIndex, x);
	}

	public void setBinaryStream(int parameterIndex, InputStream x, int length)
			throws SQLException {
		// TODO Auto-generated method stub
		statement.setBinaryStream(parameterIndex, x, length);
	}

	public void setBlob(int i, Blob x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setBlob(i, x);
	}

	public void setBoolean(int parameterIndex, boolean x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(new Boolean(x));
		statement.setBoolean(parameterIndex, x);
	}

	public void setByte(int parameterIndex, byte x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(new Byte(x));
		statement.setByte(parameterIndex, x);
	}

	public void setBytes(int parameterIndex, byte[] x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setBytes(parameterIndex, x);
	}

	public void setCharacterStream(int parameterIndex, Reader reader, int length)
			throws SQLException {
		// TODO Auto-generated method stub
		statement.setCharacterStream(parameterIndex, reader, length);
	}

	public void setClob(int i, Clob x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setClob(i, x);
	}

	public void setDate(int parameterIndex, Date x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setDate(parameterIndex, x);
	}

	public void setDate(int parameterIndex, Date x, Calendar cal)
			throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setDate(parameterIndex, x, cal);
	}

	public void setDouble(int parameterIndex, double x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(new Double(x));
		statement.setDouble(parameterIndex, x);
	}

	public void setFloat(int parameterIndex, float x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(new Float(x));
		statement.setFloat(parameterIndex, x);
	}

	public void setInt(int parameterIndex, int x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(new Integer(x));
		statement.setInt(parameterIndex, x);
	}

	public void setLong(int parameterIndex, long x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(new Long(x));
		statement.setLong(parameterIndex, x);
	}

	public void setNull(int parameterIndex, int sqlType) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(null);
		statement.setNull(parameterIndex, sqlType);
	}

	public void setNull(int paramIndex, int sqlType, String typeName)
			throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(null);
		statement.setNull(paramIndex, sqlType, typeName);
	}

	public void setObject(int parameterIndex, Object x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setObject(parameterIndex, x);
	}

	public void setObject(int parameterIndex, Object x, int targetSqlType)
			throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setObject(parameterIndex, x);
	}

	public void setObject(int parameterIndex, Object x, int targetSqlType,
			int scale) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setObject(parameterIndex, x, targetSqlType);
	}

	public void setRef(int i, Ref x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setRef(i, x);
	}

	public void setShort(int parameterIndex, short x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(new Short(x));
		statement.setShort(parameterIndex, x);
	}

	public void setString(int parameterIndex, String x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setString(parameterIndex, x);
	}

	public void setTime(int parameterIndex, Time x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setTime(parameterIndex, x);
	}

	public void setTime(int parameterIndex, Time x, Calendar cal)
			throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setTime(parameterIndex, x, cal);
	}

	public void setTimestamp(int parameterIndex, Timestamp x)
			throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setTimestamp(parameterIndex, x);
	}

	public void setTimestamp(int parameterIndex, Timestamp x, Calendar cal)
			throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setTimestamp(parameterIndex, x, cal);
	}

	public void setURL(int parameterIndex, URL x) throws SQLException {
		// TODO Auto-generated method stub
		parameters.add(x);
		statement.setURL(parameterIndex, x);
	}

	public void setUnicodeStream(int parameterIndex, InputStream x, int length)
			throws SQLException {
	}

	private void debug(String sql) {
		Logger.log(sql);
	}

	private void debugParameter() {
		if (parameters.size() > 0) {
			for (int i = 0; i < this.parameters.size(); i++) {
				Logger.log("para" + i + "=" + parameters.get(i) + ";");
			}
			Logger.log("------------------Parameter End-----------------");
		}

	}

}
